<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Alerts" xml:space="preserve">
    <value>Greenhouse Alerts</value>
  </data>
  <data name="AutomateAlerts" xml:space="preserve">
    <value>
Automate temperature alerts to efficiently maintain ideal conditions and reliability for your system.</value>
  </data>
  <data name="BehaviorAnalysis" xml:space="preserve">
    <value>Behavior Analysis</value>
  </data>
  <data name="BestSolution" xml:space="preserve">
    <value>The Best Solution for Your Greenhouse</value>
  </data>
  <data name="ControlTemperature" xml:space="preserve">
    <value>Control and monitor the temperatures of your greenhouses in real time to ensure the ideal environment for your devices.</value>
  </data>
  <data name="DashboardAnalyse" xml:space="preserve">
    <value>Chart Analysis</value>
  </data>
  <data name="Developer" xml:space="preserve">
    <value>Developer</value>
  </data>
  <data name="GenerateReports" xml:space="preserve">
    <value>Generate detailed reports on the performance of your greenhouses and make decisions based on accurate data.</value>
  </data>
  <data name="GetData" xml:space="preserve">
    <value>Get accurate, real-time data on the temperature and other critical parameters of your devices.</value>
  </data>
  <data name="HistoricAnalyse" xml:space="preserve">
    <value>View and analyze historical data through detailed graphs to better understand your plants' performance and needs.</value>
  </data>
  <data name="KnowMore" xml:space="preserve">
    <value>Know more</value>
  </data>
  <data name="KnowOurDevs" xml:space="preserve">
    <value>Meet the Developers</value>
  </data>
  <data name="KnowOurTeam" xml:space="preserve">
    <value>Meet our team</value>
  </data>
  <data name="ManageDevices" xml:space="preserve">
    <value>Track and manage your devices from anywhere with our intuitive, easy-to-use system.</value>
  </data>
  <data name="MonitorAndOptimize" xml:space="preserve">
    <value>Monitor and Optimize Your Greenhouses with Ease</value>
  </data>
  <data name="MonitoringTemperatures" xml:space="preserve">
    <value>Temperature Monitoring</value>
  </data>
  <data name="MonitorTemperatures" xml:space="preserve">
    <value>Track temperatures, analyze behavior and discover different features to maximize the efficiency of your devices. Your production on a new level!</value>
  </data>
  <data name="OurServices" xml:space="preserve">
    <value>Our services</value>
  </data>
  <data name="OurSoftware" xml:space="preserve">
    <value>Our greenhouse software is developed by a dedicated team of experts. Meet the minds behind our innovative solutions.</value>
  </data>
  <data name="OurSystemOffer" xml:space="preserve">
    <value>Our system offers real-time monitoring, graph analysis and alerts to optimize the management of your greenhouses.</value>
  </data>
  <data name="OurSystems" xml:space="preserve">
    <value>
Our systems proudly boast an architecture focused on user protection, privacy, security, and reliability.</value>
  </data>
  <data name="OurTeam" xml:space="preserve">
    <value>OUR TEAM</value>
  </data>
  <data name="RealTimeMonitoring" xml:space="preserve">
    <value>Real-Time Monitoring</value>
  </data>
  <data name="ReceiveAlerts" xml:space="preserve">
    <value>Receive instant notifications about any critical variation in parameters, allowing quick actions to control your devices.</value>
  </data>
  <data name="Reports" xml:space="preserve">
    <value>Detailed Reports</value>
  </data>
  <data name="Security" xml:space="preserve">
    <value>Security</value>
  </data>
  <data name="Services" xml:space="preserve">
    <value>SERVICES</value>
  </data>
  <data name="System" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="SystemAutomation" xml:space="preserve">
    <value>Systems Automation</value>
  </data>
  <data name="UseAnalysis" xml:space="preserve">
    <value>Use advanced analytics to better understand device behavior and optimize your productivity.</value>
  </data>
  <data name="WeOfferServices" xml:space="preserve">
    <value>We offer a variety of services to optimize the efficiency of your greenhouses, including temperature monitoring, behavior analysis and many other advanced features.</value>
  </data>
  <data name="WhyChooseUs" xml:space="preserve">
    <value>WHY CHOOSE US</value>
  </data>
</root>